# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-05 18:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('GarageApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BuildingNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bldnum_desc', models.CharField(max_length=200)),
                ('bldnum_note', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_name', models.CharField(max_length=20)),
                ('comp_desc', models.CharField(max_length=50)),
                ('comp_note', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyAddressLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_add_lk_appnum', models.CharField(max_length=10)),
                ('comp_add_lk_bldnum_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.BuildingNumber')),
                ('comp_add_lk_comp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Company')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyEmailLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_email_lk_comp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Company')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyPhoneLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_ph_lk_comp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Company')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyWebLinkLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_weblk_lk_comp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Company')),
            ],
        ),
        migrations.CreateModel(
            name='ContactAddressLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_add_lk_appnum', models.CharField(max_length=10)),
                ('contact_add_lk_bldnum_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.BuildingNumber')),
            ],
        ),
        migrations.CreateModel(
            name='ContactCompanyLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_comp_lk_comp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Company')),
            ],
        ),
        migrations.CreateModel(
            name='ContactEmailLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ContactPhoneLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ContactProfessionalTitleLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ContactWebLinkLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=200)),
                ('country_note', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_num', models.CharField(max_length=30)),
                ('phone_desc', models.CharField(max_length=50)),
                ('phone_note', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poscod_desc', models.CharField(max_length=200)),
                ('poscod_note', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profn_title_name', models.CharField(max_length=20)),
                ('profn_title_desc', models.CharField(max_length=50)),
                ('profn_title_note', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=200)),
                ('state_note', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Street',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_name', models.CharField(max_length=200)),
                ('street_note', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('useracc_username', models.CharField(max_length=15)),
                ('useracc_password', models.CharField(max_length=15)),
                ('useracc_is_active', models.BooleanField(default=True)),
                ('useracc_is_stuff', models.BooleanField(default=False)),
                ('useracc_is_admin', models.BooleanField(default=False)),
                ('useracc_is_employee', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='WebLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weblk_desc', models.URLField(max_length=50)),
                ('weblk_note', models.CharField(default='feel free to comment', max_length=100)),
            ],
        ),
        migrations.RenameField(
            model_name='email',
            old_name='email',
            new_name='email_desc',
        ),
        migrations.RemoveField(
            model_name='contact',
            name='email',
        ),
        migrations.RemoveField(
            model_name='contact',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='contact',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='email',
            name='description',
        ),
        migrations.AddField(
            model_name='contact',
            name='contact_first_name',
            field=models.CharField(default='enter your first name', max_length=50),
        ),
        migrations.AddField(
            model_name='contact',
            name='contact_last_name',
            field=models.CharField(default='enter your last name', max_length=50),
        ),
        migrations.AddField(
            model_name='contact',
            name='contact_note',
            field=models.CharField(default='feel free to write your command', max_length=100),
        ),
        migrations.AddField(
            model_name='email',
            name='email_note',
            field=models.CharField(default='feel free to comment', max_length=200),
        ),
        migrations.AddField(
            model_name='useraccount',
            name='useracc_contact_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Contact'),
        ),
        migrations.AddField(
            model_name='contactweblinklink',
            name='contact_weblk_lk_contact_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Contact'),
        ),
        migrations.AddField(
            model_name='contactweblinklink',
            name='contact_weblk_lk_weblk_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.WebLink'),
        ),
        migrations.AddField(
            model_name='contactprofessionaltitlelink',
            name='contact_profn_title_lk_contact_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Contact'),
        ),
        migrations.AddField(
            model_name='contactprofessionaltitlelink',
            name='contact_profn_title_lk_profn_title_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.ProfessionalTitle'),
        ),
        migrations.AddField(
            model_name='contactphonelink',
            name='contact_ph_lk_contact_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Contact'),
        ),
        migrations.AddField(
            model_name='contactphonelink',
            name='contact_ph_lk_phone_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Phone'),
        ),
        migrations.AddField(
            model_name='contactemaillink',
            name='contact_email_lk_contact_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Contact'),
        ),
        migrations.AddField(
            model_name='contactemaillink',
            name='contact_email_lk_email_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Email'),
        ),
        migrations.AddField(
            model_name='contactcompanylink',
            name='contact_comp_lk_contact_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Contact'),
        ),
        migrations.AddField(
            model_name='contactaddresslink',
            name='contact_add_lk_contact_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Contact'),
        ),
        migrations.AddField(
            model_name='contactaddresslink',
            name='contact_add_lk_country_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Country'),
        ),
        migrations.AddField(
            model_name='contactaddresslink',
            name='contact_add_lk_poscod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.PostalCode'),
        ),
        migrations.AddField(
            model_name='contactaddresslink',
            name='contact_add_lk_state_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.State'),
        ),
        migrations.AddField(
            model_name='contactaddresslink',
            name='contact_add_lk_street_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Street'),
        ),
        migrations.AddField(
            model_name='companyweblinklink',
            name='comp_weblk_lk_weblk_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.WebLink'),
        ),
        migrations.AddField(
            model_name='companyphonelink',
            name='comp_ph_lk_phone_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Phone'),
        ),
        migrations.AddField(
            model_name='companyemaillink',
            name='comp_email_lk_email_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Email'),
        ),
        migrations.AddField(
            model_name='companyaddresslink',
            name='comp_add_lk_country_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Country'),
        ),
        migrations.AddField(
            model_name='companyaddresslink',
            name='comp_add_lk_poscod_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.PostalCode'),
        ),
        migrations.AddField(
            model_name='companyaddresslink',
            name='comp_add_lk_state_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.State'),
        ),
        migrations.AddField(
            model_name='companyaddresslink',
            name='comp_add_lk_street_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GarageApp.Street'),
        ),
    ]
